{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/securityRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","host","headerLinks","security","validToken","user","userIsAuthenticated","fullname","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","projectTask_id","deleteProjectTask","priorityString","priorityClass","project_task","priority","projectSequence","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","toDoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","project_tasks","backlog","projectNotFound","role","boardAlgorithm","initialState","booleanActionPayload","combineReducers","action","filter","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","fullName","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb983860.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CreateProjectButton = () => {\n    return (\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                Create a Project\n            </Link>\n        </React.Fragment>\n\n    )\n}\n\nexport default CreateProjectButton;","// types of actions\n// only action: get errors\n\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// Types for backlog actions\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","// talk to the backend\nimport axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\n// we pass a project object, if everything goes well, go to dashboard with updated project. If there is error, show what error you get\nexport const createProject = (project, history) => async function (dispatch) {\n    try {\n        // server response\n        await axios.post(\"/api/project\", project);\n        // sent view to dashboard\n        history.push(\"/dashboard\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjects = () => async dispatch => {\n    const res = await axios.get(\"/api/project/all\");\n    dispatch({\n        type: GET_PROJECTS,\n        payload: res.data\n    });\n};\n\n// wire \nexport const getProject = (id, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/project/${id}`);\n        dispatch({\n            type: GET_PROJECT,\n            payload: res.data\n        });\n    } catch (err) {\n        history.push(\"/dashboard\"); // bad path: send people back to dashboard\n    }\n\n};\n\nexport const deleteProject = id => async dispatch => {\n    if (window.confirm(\"Are you sure?\")) {\n        await axios.delete(`/api/project/${id}`);\n        dispatch({\n            type: DELETE_PROJECT,\n            payload: id\n        });\n    }\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from '../../actions/projectActions';\n\nclass ProjectItem extends Component {\n\n    onDeleteClick = id => {\n        this.props.deleteProject(id);\n    }\n    render() {\n        const { project } = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>{project.projectName}</h3>\n                            <p>{project.description}</p>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\">Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectIdentifier}`} >\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\">Update Project Info</i>\n                                    </li>\n                                </Link>\n\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\n                                    <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\n                                </li>\n\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nProjectItem.propTypes = {\n    deleteProject: PropTypes.func.isRequired\n}\n\nexport default connect(null, { deleteProject })(ProjectItem);","import React, { Component } from 'react';\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport ProjectItem from \"./Project/ProjectItem\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n    componentDidMount() {\n        this.props.getProjects();\n    }\n\n    render() { // jsx can allow you to write html inside js code\n        const { projects } = this.props.project;\n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Projects</h1>\n                            <br />\n                            <CreateProjectButton />\n                            <br />\n                            <hr />\n                            {projects.map(project => (\n                                <ProjectItem key={project.id} project={project} />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    project: state.project\n})\n\n// connect方法接受两个参数, 它们定义了 UI 组件的业务逻辑。前者负责输入逻辑，即将state映射到 UI 组件的参数（props），后者负责输出逻辑，即将用户对 UI 组件的操作映射成 Action。\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n    if (token) {\n        // set token in header\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/users/register\", newUser);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const login = LoginRequest => async dispatch => {\n    try {\n        // post => login Request\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\n        // extract token from res.data\n        const { token } = res.data;\n        // store the token in the localStorage\n        localStorage.setItem(\"jwtToken\", token)\n        // set our token in header\n        setJWTToken(token);\n        // decode token on React so we can use it\n        const decoded = jwt_decode(token);\n        // dispatch to our securityReducer\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: decoded\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {} // valid token turned to false, no current user\n    });\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\n// navbar options\nclass Header extends Component {\n    logout() {\n        // eslint-disable-next-line no-unused-expressions\n        this.props.logout();\n        window.location = \"http://\" + window.location.host + \"/\";\n    }\n\n    render() {\n        //dynamically show buttons when you are login or logout\n        const { validToken, user } = this.props.security;\n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/dashboard\" className=\"nav-link\">\n                            Dashboard\n            </Link>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/dashboard\" className=\"nav-link\">\n                            <i className=\"fas fa-user-circle mr-1\" />\n                            {user.fullname}\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/logout\" className=\"nav-link\" onClick={this.logout.bind(this)}>\n                            Logout\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/register\" className=\"nav-link\">\n                            Sign Up\n            </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/login\" className=\"nav-link\">\n                            Login\n            </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        let headerLinks;\n\n        if (validToken && user) {\n            headerLinks = userIsAuthenticated;\n        } else {\n            headerLinks = userIsNotAuthenticated;\n\n        }\n\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n                <div className=\"container\">\n                    <Link to=\"/\" className=\"navbar-brand\">\n                        Personal Project Management Tool\n            </Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    {headerLinks}\n                </div>\n            </nav>\n\n        )\n    }\n}\n\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security,\n})\n\nexport default connect(mapStateToProps, { logout })(Header);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {} // in the beginning there is no error\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n        this.props.createProject(newProject, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                {\n                    //check name attribute input fields\n                    //create constructor\n                    //set state\n                    //set value on input fields\n                    //create onChange function\n                    //set onChange on each input field\n                    //bind on constructor\n                    //check state change in the react extension\n                }\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.projectName\n                                            })}\n                                            placeholder=\"Project Name\"\n                                            name=\"projectName\"\n                                            value={this.state.projectName}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.projectIdentifier\n                                            })}\n                                            placeholder=\"Unique Project ID\"\n                                            name=\"projectIdentifier\"\n                                            value={this.state.projectIdentifier}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectIdentifier && (\n                                            <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n                                        )}\n\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.description\n                                            })}\n                                            placeholder=\"Project Description\"\n                                            name=\"description\"\n                                            value={this.state.description}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"start_date\"\n                                            value={this.state.start_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"end_date\"\n                                            value={this.state.end_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block mt-4\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// tell react the createProject function is required proptype for this to work properly\nAddProject.propTypes = {\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n})\n\n// map our state to props\nexport default connect(\n    mapStateToProps,\n    { createProject } // this is the action\n)(AddProject);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject, getProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {} // in the beginning there is no error\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    // set state from next props we are getting. when we mount, we perform the api call, then the component receive object from reducer\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        } = nextProps.project;\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        });\n    }\n\n    //life cycle hooks, load things fron database\n    componentDidMount() {\n        // we'll get id from props\n        const { id } = this.props.match.params;\n        this.props.getProject(id, this.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const updateProject = {\n            id: this.state.id,\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n        this.props.createProject(updateProject, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Update Project form</h5>\n                                <hr />\n\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.projectName\n                                            })}\n                                            placeholder=\"Project Name\"\n                                            name=\"projectName\"\n                                            value={this.state.projectName}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\n\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control form-control-lg \"\n                                            placeholder=\"Unique Project ID\"\n                                            name=\"projectIdentifier\"\n                                            value={this.state.projectIdentifier}\n                                            onChange={this.onChange}\n                                            disabled\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.description\n                                            })}\n                                            placeholder=\"Project Description\"\n                                            name=\"description\"\n                                            value={this.state.description}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"start_date\"\n                                            value={this.state.start_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"end_date\"\n                                            value={this.state.end_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block mt-4\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    createProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project: state.project.project, // project from combineReducers in index.js,then project state in projectReducer.js\n    errors: state.errors\n})\n\nexport default connect(\n    mapStateToProps,\n    { getProject, createProject } // this is the action\n)(UpdateProject);\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\n\nclass ProjectTask extends Component {\n    onDeleteClick = (backlog_id, projectTask_id) => {\n        this.props.deleteProjectTask(backlog_id, projectTask_id);\n    }\n    render() {\n        const { project_task } = this.props;\n\n        let priorityString;\n        let priorityClass;\n\n        if (project_task.priority === 1) {\n            priorityClass = \"bg-danger text-light\";\n            priorityString = \"HIGH\"\n        } else if (project_task.priority === 2) {\n            priorityClass = \"bg-warning text-light\";\n            priorityString = \"MEDIUM\"\n        } else {\n            priorityClass = \"bg-info text-light\";\n            priorityString = \"LOW\"\n        }\n\n        return (\n            <div className=\"card mb-1 bg-light\">\n                <div className={`card-header text-primary ${priorityClass}`}>ID: {project_task.projectSequence} -- Priority: {\"\"}{priorityString}</div>\n                <div className=\"card-body bg-light\">\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\n                    <p className=\"card-text text-truncate \">{project_task.acceptanceCriteria}</p>\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">View / Update</Link>\n                    <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>Delete</button>\n                </div>\n            </div>\n        );\n    }\n};\n\nProjectTask.propTypes = {\n    deleteProjectTask: PropTypes.func.isRequired\n}\n\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport { GET_BACKLOG, GET_ERRORS, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\n    try {\n        await axios.post(`/api/backlog/${backlog_id}`, project_task); // see backlog controller in backend\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({ //clear errors if everything goes well\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({ //display errors if something goes wrong\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n\n}\n\nexport const getBacklog = backlog_id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\n        dispatch({\n            type: GET_BACKLOG,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n\n    }\n}\n\nexport const getProjectTask = (backlog_id, projectTask_id, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}/${projectTask_id}`);\n        dispatch({\n            type: GET_PROJECT_TASK,\n            payload: res.data\n        });\n    } catch (err) {\n        history.push(`/dashboard`); // bad path: send people back to dashboard\n    }\n}\n\nexport const updateProjectTask = (backlog_id, projectTask_id, project_task, history) => async dispatch => {\n    try {\n        await axios.patch(`/api/backlog/${backlog_id}/${projectTask_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n}\n\nexport const deleteProjectTask = (backlog_id, projectTask_id) => async dispatch => {\n    if (window.confirm(\"Are you sure?\")) {\n        await axios.delete(`/api/backlog/${backlog_id}/${projectTask_id}`);\n        dispatch({\n            type: DELETE_PROJECT_TASK,\n            payload: projectTask_id\n        });\n    }\n};","import React, { Component } from 'react';\nimport ProjectTask from './ProjectTasks/ProjectTask';\n\nclass Backlog extends Component {\n\n    render() {\n        const { project_tasks_prop } = this.props;\n        const tasks = project_tasks_prop.map(project_task => (\n            <ProjectTask key={project_task.id} project_task={project_task} />\n        ));\n\n        let toDoItems = [];\n        let inProgressItems = [];\n        let doneItems = [];\n\n        for (let i = 0; i < tasks.length; i++) {\n            if (tasks[i].props.project_task.status === \"TO_DO\") {\n                toDoItems.push(tasks[i]);\n            } else if (tasks[i].props.project_task.status === \"DONE\") {\n                doneItems.push(tasks[i]);\n            } else {\n                inProgressItems.push(tasks[i]);\n            }\n        }\n\n        return (\n            <div className=\"container\" >\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-secondary text-white\">\n                                <h3>TO DO</h3>\n                            </div>\n                        </div>\n                        {toDoItems}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-primary text-white\">\n                                <h3>In Progress</h3>\n                            </div>\n                        </div>\n                        {inProgressItems}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-success text-white\">\n                                <h3>Done</h3>\n                            </div>\n                        </div>\n                        {doneItems}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Backlog;","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\"; // use for button to create a project task\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n\n    // constructer to handle errors\n    constructor() {\n        super();\n        this.state = {\n            errors: {}\n        }\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    render() {\n        const { id } = this.props.match.params;\n        const { project_tasks } = this.props.backlog;\n        const { errors } = this.state;\n\n        let BoardContent;\n\n        const boardAlgorithm = (errors, project_tasks) => {\n            if (project_tasks.length === 0) {\n                if (errors.projectNotFound) {\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">{errors.projectNotFound}</div>\n                    );\n                } else if (errors.projectIdentifier) {\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">{errors.projectIdentifier}</div>\n                    );\n                } else {\n                    return (\n                        <div className=\"alert alert-info text-center\" role=\"alert\">No Project Tasks on this board</div>\n                    );\n                }\n            } else {\n                return <Backlog project_tasks_prop={project_tasks} />;\n            }\n        }\n\n        BoardContent = boardAlgorithm(errors, project_tasks);\n\n        return (\n            <div className=\"container\">\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n                </Link>\n                <br />\n                <hr />\n                {BoardContent}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    backlog: state.backlog,\n    errors: state.errors\n})\n\nProjectBoard.propTypes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n    projects: [],\n    project: {}\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            }\n        case GET_PROJECT:\n            return {\n                ...state,\n                project: action.payload\n            }\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(\n                    project => project.projectIdentifier !== action.payload\n                )\n            }\n        default:\n            return state;\n    }\n}","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\n\nconst initialState = {\n    project_tasks: [],\n    project_task: {}\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            }\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            }\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(\n                    project_task => project_task.projectSequence !== action.payload\n                )\n            }\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_USER } from \"../actions/types\"\n\nconst initialState = {\n    user: {},\n    validToken: false\n}\n\nconst booleanActionPayload = (payload) => {\n    if (payload) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                validToken: booleanActionPayload(action.payload),\n                user: action.payload\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n    errors: errorReducer,\n    project: projectReducer,\n    backlog: backlogReducer,\n    security: securityReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\n//  make it accessible to all browsers\n// compose(...functions)： 从右到左来组合多个函数。\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware),\n        ReactReduxDevTools));\n} else {\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\n}\n\n\n// store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware),\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nexport default store;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n    constructor(props) { // we want to extract id in teh address\n        super(props);\n        const { id } = this.props.match.params;\n        this.state = {\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: id,\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProjectTask = {\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate\n        };\n        this.props.addProjectTask(this.state.projectIdentifier, newProjectTask, this.props.history); //pass to the action\n    }\n    render() {\n        const { id } = this.props.match.params;\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"add-PBI\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                                    Back to Project Board\n                                </Link>\n                                <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                                <p className=\"lead text-center\">Project Name + Project Code</p>\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\"\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.summary\n                                            })}\n                                            name=\"summary\"\n                                            placeholder=\"Project Task summary\"\n                                            value={this.state.summary}\n                                            onChange={this.onChange} />\n                                        {errors.summary && (\n                                            <div className=\"invalid-feedback\">{errors.summary}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.acceptanceCriteria\n                                            })}\n                                            placeholder=\"Acceptance Criteria\"\n                                            name=\"acceptanceCriteria\"\n                                            value={this.state.acceptanceCriteria}\n                                            onChange={this.onChange} />\n                                        {errors.acceptanceCriteria && (\n                                            <div className=\"invalid-feedback\">{errors.acceptanceCriteria}</div>\n                                        )}\n                                    </div>\n                                    <h6>Due Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.dueDate\n                                            })}\n                                            name=\"dueDate\"\n                                            value={this.state.dueDate}\n                                            onChange={this.onChange} />\n                                        {errors.dueDate && (\n                                            <div className=\"invalid-feedback\">{errors.dueDate}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <select\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.priority\n                                            })}\n                                            name=\"priority\"\n                                            value={this.state.priority}\n                                            onChange={this.onChange}>\n                                            <option value={0}>Select Priority</option>\n                                            <option value={1}>High</option>\n                                            <option value={2}>Medium</option>\n                                            <option value={3}>Low</option>\n                                        </select>\n                                        {errors.priority && (\n                                            <div className=\"invalid-feedback\">{errors.priority}</div>\n                                        )}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <select\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.status\n                                            })}\n                                            name=\"status\"\n                                            value={this.state.status}\n                                            onChange={this.onChange}>\n                                            <option value=\"\">Select Status</option>\n                                            <option value=\"TO_DO\">TO DO</option>\n                                            <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                            <option value=\"DONE\">DONE</option>\n                                        </select>\n                                        {errors.status && (\n                                            <div className=\"invalid-feedback\">{errors.status}</div>\n                                        )}\n                                    </div>\n\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nAddProjectTask.propTypes = {\n    addProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n})\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { updateProjectTask, getProjectTask } from \"../../../actions/backlogActions\";\n\nclass UpdateProjectTask extends Component {\n    constructor() {\n        super();\n        this.state = {\n            id: \"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: \"\",\n            create_At: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n        const {\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            create_At\n        } = nextProps.project_task;\n\n        this.setState({\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            create_At\n        });\n    }\n\n    //life cycle hooks\n    componentDidMount() {\n        // we'll get id from props\n        const { backlog_id, projectTask_id } = this.props.match.params;\n        this.props.getProjectTask(backlog_id, projectTask_id, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const UpdateProjectTask = {\n            id: this.state.id,\n            projectSequence: this.state.projectSequence,\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n            projectIdentifier: this.state.projectIdentifier,\n            create_At: this.state.create_At\n        };\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, UpdateProjectTask, this.props.history); //pass to the action\n    }\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"add-PBI\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\n                                    Back to Project Board\n                                </Link>\n                                <h4 className=\"display-4 text-center\">Update Project Task</h4>\n                                <p className=\"lead text-center\">Project Name + Project Code</p>\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\"\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.summary\n                                            })}\n                                            name=\"summary\"\n                                            placeholder=\"Project Task summary\"\n                                            value={this.state.summary}\n                                            onChange={this.onChange} />\n                                        {errors.summary && (\n                                            <div className=\"invalid-feedback\">{errors.summary}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.acceptanceCriteria\n                                            })}\n                                            placeholder=\"Acceptance Criteria\"\n                                            name=\"acceptanceCriteria\"\n                                            value={this.state.acceptanceCriteria}\n                                            onChange={this.onChange} />\n                                        {errors.acceptanceCriteria && (\n                                            <div className=\"invalid-feedback\">{errors.acceptanceCriteria}</div>\n                                        )}\n                                    </div>\n                                    <h6>Due Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.dueDate\n                                            })}\n                                            name=\"dueDate\"\n                                            value={this.state.dueDate}\n                                            onChange={this.onChange} />\n                                        {errors.dueDate && (\n                                            <div className=\"invalid-feedback\">{errors.dueDate}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <select\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.priority\n                                            })}\n                                            name=\"priority\"\n                                            value={this.state.priority}\n                                            onChange={this.onChange}>\n                                            <option value={0}>Select Priority</option>\n                                            <option value={1}>High</option>\n                                            <option value={2}>Medium</option>\n                                            <option value={3}>Low</option>\n                                        </select>\n                                        {errors.priority && (\n                                            <div className=\"invalid-feedback\">{errors.priority}</div>\n                                        )}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <select\n                                            className={classnames(\"form-control form-control-lg \", {\n                                                \"is-invalid\": errors.status\n                                            })}\n                                            name=\"status\"\n                                            value={this.state.status}\n                                            onChange={this.onChange}>\n                                            <option value=\"\">Select Status</option>\n                                            <option value=\"TO_DO\">TO DO</option>\n                                            <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                            <option value=\"DONE\">DONE</option>\n                                        </select>\n                                        {errors.status && (\n                                            <div className=\"invalid-feedback\">{errors.status}</div>\n                                        )}\n                                    </div>\n\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUpdateProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    updateProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task, // project from combineReducers in index.js,then project state in projectReducer.js\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(UpdateProjectTask);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\n                                <p className=\"lead\">\n                                    Create your account to join active projects or start your own\n                            </p>\n                                <hr />\n                                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                                    Sign Up\n                            </Link>\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                                    Login\n                            </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nLanding.propTypes = {\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            fullName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        };\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            fullName: this.state.fullName,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        };\n\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.fullName\n                                        })}\n                                        placeholder=\"Full Name\"\n                                        name=\"fullName\"\n                                        value={this.state.fullName}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.fullName && (\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address (Username)\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.confirmPassword\n                                        })}\n                                        placeholder=\"Confirm Password\"\n                                        name=\"confirmPassword\"\n                                        value={this.state.confirmPassword}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.confirmPassword && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.confirmPassword}\n                                        </div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    security: state.security\n});\n\nexport default connect(\n    mapStateToProps,\n    { createNewUser }\n)(Register);\n","import React, { Component } from 'react'\nimport { login } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const LoginRequest = {\n            username: this.state.username,\n            password: this.state.password\n        }\n        this.props.login(LoginRequest);\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange} />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange} />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>)}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, { login })(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n    <Route\n        {...otherProps}\n        render={\n            props => security.validToken === true ? (<Component {...props} />) : (<Redirect to=\"/login\" />)\n        }\n    />\n);\n\nSecuredRoute.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);","import React, { Component } from \"react\";\nimport './App.css';\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\"\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/securityRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n// set token here so that we don't lose it\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  })\n\n  // make sure token is still valid\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location = \"http://\" + window.location.host + \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      // wrap application in provider tag\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              // public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n\n            {\n              // private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n              <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n              <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n              <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:projectTask_id\" component={UpdateProjectTask} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// load your main application\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}